apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "argocd.name" . }}-applicationset-controller
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ include "argocd.name" . }}-applicationset-controller
    {{- include "argocd.labels" . | nindent 4 }}
    app.kubernetes.io/component: applicationset
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "argocd.name" . }}-applicationset-controller
      {{- include "argocd.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: applicationset
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "argocd.name" . }}-applicationset-controller
        {{- include "argocd.labels" . | nindent 8 }}
        app.kubernetes.io/component: applicationset
    spec:
      serviceAccountName: {{ include "argocd.name" . }}-applicationset-controller
      containers:
        - name: argocd-applicationset-controller
          image: 'quay.io/argoproj/argocd:{{ .Values.applicationSetController.version }}'
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - entrypoint.sh applicationset-controller --metrics-addr=:8080 --probe-addr=:8081 --enable-leader-election=true --argocd-repo-server={{ include "argocd.name" . }}-repo-server:8081 --policy=sync --logformat text --loglevel info
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - name: http
              containerPort: 8081
              protocol: TCP
            - name: metrics
              containerPort: 8080
              protocol: TCP
            - name: webhook
              containerPort: 7000
              protocol: TCP
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            capabilities:
              drop:
                - all
          volumeMounts:
            - mountPath: /app/config/ssh
              name: ssh-known-hosts
            - mountPath: /app/config/tls
              name: tls-certs
            - mountPath: /app/config/gpg/source
              name: gpg-keys
            - mountPath: /app/config/gpg/keys
              name: gpg-keyring
            - mountPath: /tmp
              name: tmp
      volumes:
        - name: ssh-known-hosts
          configMap:
            name: {{ include "argocd.name" . }}-ssh-known-hosts-cm
        - name: tls-certs
          configMap:
            name:  {{ include "argocd.name" . }}-tls-certs-cm
        - name: gpg-keys
          configMap:
            name:  {{ include "argocd.name" . }}-gpg-keys-cm
        - name: gpg-keyring
          emptyDir: {}
        - name: tmp
          emptyDir:
            medium: Memory
